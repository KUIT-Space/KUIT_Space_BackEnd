spring:
  config:
    activate:
      on-profile: "localPort"

server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: "localRDB"

  datasource:
    url:  ${DATASOURCE_URL_LOCAL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: ${DATASOURCE_DRIVER:com.mysql.cj.jdbc.Driver}
logging:
  level:
    org.hibernate.sql: debug

---
spring:
  # H2 Database 설정
  datasource:
    driver-class-name: org.h2.Driver
    url: 'jdbc:h2:mem:test'   # H2 DB 연결 주소 (In-Memory Mode)
    #url: 'jdbc:h2:~/test'    # H2 DB 연결 주소 (Embedded Mode)
    username: arkchive        # H2 DB 접속 ID (사용자 지정)
    password: a;sldkfj7        # H2 DB 접속 PW (사용자 지정)

  # H2 Console 설정
  h2:
    console: # H2 DB를 웹에서 관리할 수 있는 기능
      enabled: true           # H2 Console 사용 여부
      path: /h2-console       # H2 Console 접속 주소

  # JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create        # DB 초기화 전략 (none, create, create-drop, update, validate)
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true      # 쿼리 로그 포맷 (정렬)
        show_sql: true        # 쿼리 로그 출력

---
spring:
  config:
    activate:
      on-profile: "localMongoDB"
  data:
    mongodb:
      uri: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}

---
spring:
  config:
    activate:
      on-profile: "localJPA"

  jpa:
    hibernate:
      ddl-auto: update        # table을 전부 drop했다가 다시 생성 -> 테스트용
    properties:
      hibernate:
        format_sql: true
        show_sql: true
---
spring:
  config:
    activate:
      on-profile: "localS3"
cloud:
  aws:
    credentials:
      access-key: ${S3-ACCESS-KEY}
      secret-key: ${S3-SECRET-KEY}
    s3:
      bucket: project-space-image-storage
    region:
      static: ap-northeast-2 # 리전 정보(서울)
    stack:
      auto: false

---
spring:
  config:
    activate:
      on-profile: "localSecret"

secret:
  jwt-secret-key: ${JWT_SECRET_KEY:b237a73895f5e617b7364708413fff71c228721a5f8c84a7bb2a3b84f1bb1c23}
  jwt-login-secret-key: ${JWT_SECRET_KEY_LOGIN}
  jwt-user-space-secret-key: ${JWT_SECRET_KEY_USER_SPACE}
  jwt-expired-in: ${JWT_EXPIRED_IN:3600000}
